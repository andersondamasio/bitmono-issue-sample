<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net9.0-ios</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net9.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>MauiAppIOSSampleBitMono</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>MauiAppIOSSampleBitMono</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.mauiappiossamplebitmono</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- To develop, package, and publish an app to the Microsoft Store, see: https://aka.ms/MauiTemplateUnpackaged -->
		<WindowsPackageType>None</WindowsPackageType>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">15.0</SupportedOSPlatformVersion>
	</PropertyGroup>

	<PropertyGroup Condition="'$(TargetFramework)'=='net9.0-ios'">
	  <CodesignKey>Apple Development: Created via API (D3362ZVY7R)</CodesignKey>
	  <CodesignProvision>VS: WildCard Development</CodesignProvision>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="9.0.70" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="9.0.5" />
	</ItemGroup>

  <Target Name="OfuscarDlls" AfterTargets="CopyFilesToOutputDirectory" Condition="'$(TargetFramework)' == 'net9.0-ios'">

    <PropertyGroup>
      <BitMonoToolDll>$(MSBuildProjectDirectory)\..\BitMono\Publish\BitMono.GlobalTool.dll</BitMonoToolDll>
      <DLLFile>$(MSBuildProjectDirectory)\bin\$(Configuration)\net9.0-ios\ios-arm64\$(AssemblyName).dll</DLLFile>
      <OutputDir>$(MSBuildProjectDirectory)\bin\$(Configuration)\net9.0-ios\ofucascate</OutputDir>
    </PropertyGroup>

    <Message Text="🔎 BitMonoTool: $(BitMonoToolDll)" Importance="high" />

    <MakeDir Directories="$(OutputDir)" />

    <Exec Command="dotnet $(BitMonoToolDll) --file $(DLLFile) --libraries bin\$(Configuration)\net9.0-ios\ios-arm64 --output $(OutputDir)" StandardOutputImportance="high" StandardErrorImportance="high" />

  </Target>
  
</Project>
